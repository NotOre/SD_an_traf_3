version: '3.9'

services:
  redis:
    image: redis:7.2
    container_name: redis-server
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          memory: 2G  # Limita la memoria del contenedor a 2 GB
        reservations:
          memory: 1G  # Asegura que el contenedor tenga al menos 1 GB de memoria
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scraper-storage-app
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: python main.py
  
  hadoop-pig:
    image: silicoflare/hadoop:amd
    container_name: pig_hadoop
    depends_on:
      - redis
    volumes:
      - ./:/app
    working_dir: /app
    entrypoint: ["/bin/bash", "-c"]
    command: >
      pig -x local scraper/scripts/limpieza_filtrado.pig &&
      pig -x local scraper/scripts/clasificacion_incidentes.pig &&
      pig -x local scraper/scripts/analisis_espacial_temporal.pig
    restart: "no"
    
  pig-benchmark:
    image: silicoflare/hadoop:amd
    container_name: pig_benchmark
    volumes:
      - .:/app
    working_dir: /app/scraper
    entrypoint: ["/bin/bash", "evaluar_rendimiento.sh"]
    
volumes:
  redis-data:
