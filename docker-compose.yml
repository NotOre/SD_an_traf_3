version: '3.9'

services:
  redis:
    image: redis:7.2
    container_name: redis-server
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - http.host=0.0.0.0
      - http.port=${ELASTIC_PORT:-9200}
    ports:
      - "${ELASTIC_PORT:-9200}:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:${ELASTIC_PORT:-9200} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.2
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://${ELASTIC_HOST:-elasticsearch}:${ELASTIC_PORT:-9200}
    ports:
      - "5601:5601"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5601/api/status | grep -q '\"state\":\"green\"'"]
      interval: 30s
      timeout: 10s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scraper-storage-app
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - ELASTIC_HOST=${ELASTIC_HOST:-elasticsearch}
      - ELASTIC_PORT=${ELASTIC_PORT:-9200}
      - ELASTIC_INDEX=${ELASTIC_INDEX:-eventos_waze}
    command: main.py
    volumes:
      - ./:/app
      - ./data:/data
    restart: "no"

  hadoop-pig:
    image: silicoflare/hadoop:amd
    container_name: pig_hadoop
    depends_on:
      - redis
    volumes:
      - ./:/app
    working_dir: /app
    entrypoint: ["/bin/bash", "-c"]
    command: >
      pig -x local pig/scripts/limpieza_filtrado.pig &&
      pig -x local pig/scripts/clasificacion_incidentes.pig &&
      pig -x local pig/scripts/analisis_espacial_temporal.pig
    restart: "no"
    
  pig_benchmark:
    build: ./pig_benchmark
    volumes:
      - ./pig:/pig
      - ./data:/data
    working_dir: /pig


volumes:
  redis-data:
  elasticsearch-data:
